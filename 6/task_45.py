# Задача №45. Решение в группах
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает)



def multi_summ(number):
    summ = 0
    for i in range(1, number//2 + 1):
        if number%i == 0:
            summ += i
    return summ

def f_out(K):
    if K > 10000:
        return
    out_list = []
    for i in range(200, K + 1):
        for j in range(200, K + 1):
            if multi_summ(i) == j and multi_summ(j) == i and i != j:
                set_ = {i, j}
                if set_ not in out_list:
                    out_list.append(set_)
    return out_list

def f_out_1(K):
    if K > 100000:
        return
    out_list = []
    for i in range(200, K + 1):
        j = multi_summ(i)
        if multi_summ(j) == i and i != j:
                set_ = {i, j}
                if set_ not in out_list:
                    out_list.append(set_)
    return out_list

N = int(input('Введите количество элементов массива: '))

#print(*f_out(N))
print(*f_out_1(N))

def f_out_2(num):
    div = (i for i in range(1, num // 2 + 1) if num % i == 0)
    sum_ = sum(list(div))
    return sum_
def frendly(N):
    new_array = (sorted([i, f_out_2(i)]) for i in range(1, N) if i == f_out_2(f_out_2(i)) and i != f_out_2(i))
    return dict(new_array)

print(frendly(N))

# Яна Постникова Задача НЕГАФИБОНАЧЧИ по желанию
# Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
#
# Пример:
#
# для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21] [Негафибоначчи]
# Задача XO необязательная.
# Сделайте игру крестики - нолики, человек должен играть с ботом, поле 3*3.
# Конечно, бот не должен ходить на занятые поля
# Если есть желание, то можете наделить бота псевдоинтеллектом,чтоб он ходил как можно ближе к своим занятым клеткам
# После каждого хода на экран должна выводиться текущая обстановка на поле.
# Например,
#
# | | Х |
# | | O |
# | | O |
# При ходе пользователя у надо спрашивать номер строки и столбца, куда он хочет сделать ход
#
# Задача FOOTBALL необязательная
#
# Напишите программу, которая принимает на стандартный вход список игр футбольных команд с результатом матча и выводит на стандартный вывод сводную таблицу результатов всех команд.
#
# За победу команде начисляется 3 очка, за поражение — 0, за ничью — 1.
#
# Формат ввода следующий:
# В первой строке указано целое число nn — количество завершенных игр.
# После этого идет nn строк, в которых записаны результаты игры в следующем формате:
# Перваякоманда;Забитопервойкомандой;Втораякоманда;Забитовторойкомандой
#
# Вывод программы необходимо оформить следующим образом:
# Команда:Всегоигр Побед Ничьих Поражений Всегоочков
#
# Конкретный пример ввода-вывода приведён ниже.
#
# Порядок вывода команд произвольный.
#
# Пример входа:
#
# 3
# Спартак;9;Зенит;10
# Локомотив;12;Зенит;3
# Спартак;8;Локомотив;15
#
# Выход будет:
#
# Спартак:2 0 0 2 0
# Зенит:2 1 0 1 3
# Локомотив:2 2 0 0 6